name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove Old Image with Tag latest
        run: |
          echo "Removing old image with tag: latest"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/image-fe:latest || true

      - name: Build Docker Image
        id: build
        run: |
          # TAG=${{ github.sha }}
          # echo "TAG=${TAG}" >> $GITHUB_ENV
          
          # Build image với tag từ commit hash
          # docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:${TAG} -f Dockerfile .
          
          # Build image với tag latest
          docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:latest -f Dockerfile .

      - name: Push Docker Image
        run: |
          # TAG=${{ env.TAG }}
          # echo "Pushing image with tag: ${TAG}"
          # docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:${TAG}
          
          echo "Pushing image with tag: latest"
          docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test
 
# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Remove Old Image with Tag latest
#         run: |
#           echo "Removing old image with tag: latest"
#           docker rmi ${{ secrets.DOCKER_USERNAME }}/image-fe:latest || true

#       - name: Build Docker Image
#         id: build
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:latest -f Dockerfile .

#   push:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Push Docker Image
#         run: |
#           echo "Pushing image with tag: latest"
#           docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

#   pull:
#     runs-on: ubuntu-latest
#     needs: push
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Pull Docker Image
#         run: |
#           echo "Pulling image with tag: latest"
#           docker pull ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

#   test:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install Dependencies
#         run: npm install

#       - name: Run Tests
#         run: npm test
