name: CI FE-APP

on:
  push:
    branches:
      - main

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove Old Image with Tag latest
        run: |
          echo "Removing old image with tag: latest"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/image-fe:latest || true

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:latest -f Dockerfile .

      - name: Push Docker Image
        run: |
          set -e
          echo "Pushing image with tag: latest"
          docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Docker Image Push'
          body: 'The Docker image push step has ${{ job.status }}.'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com

  pull_image:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          echo "Pulling image with tag: latest"
          docker pull ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Docker Image Pull'
          body: 'The Docker image pull step has ${{ job.status }}.'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com

  test:
    runs-on: ubuntu-latest
    needs: pull_image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install Ngrok
        run: |
          curl -s https://ngrok.com/download | tar xz
          sudo mv ngrok /usr/local/bin/

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          echo "Pulling image with tag: latest"
          docker pull ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

      - name: Remove Old Docker Stack if Exists
        run: |
          echo "Removing old Docker stack if exists"
          docker stack rm fe-stack || true
          sleep 10  # Wait a bit to ensure the stack removal is completed

      - name: Deploy Docker Compose Stack
        run: |
          echo "Deploying Docker Compose stack"
          echo "version: '3.8'
          
          services:
            frontend:
              image: \"${{ secrets.DOCKER_USERNAME }}/image-fe:latest\"
              ports:
                - \"87:80\"
              deploy:
                replicas: 2
              networks:
                - fe
                - be

          networks:
            fe:
              driver: overlay
            be:
              external: true" > docker-compose.yml
          
          docker-compose up -d

      - name: Start Ngrok
        run: |
          echo "Starting ngrok to expose Docker services"
          ngrok http 87 &

      - name: Wait for Ngrok to Start
        run: |
          sleep 10

      - name: Check Ngrok Status
        run: |
          curl -s http://localhost:4040/api/tunnels

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Deployment Status'
          body: 'The deployment step has ${{ job.status }}. Ngrok URL: http://localhost:4040/api/tunnels'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com
