name: CI FE-APP

on:
  push:
    branches:
      - main

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove Old Image with Tag latest
        run: |
          echo "Removing old image with tag: latest"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/image-fe:latest || true

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/image-fe:latest -f Dockerfile .

      - name: Push Docker Image
        run: |
          set -e
          echo "Pushing image with tag: latest"
          docker push ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Docker Image Push'
          body: 'The Docker image push step has ${{ job.status }}.'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com

  pull_image:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          echo "Pulling image with tag: latest"
          docker pull ${{ secrets.DOCKER_USERNAME }}/image-fe:latest

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Docker Image Pull'
          body: 'The Docker image pull step has ${{ job.status }}.'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com

  test:
    runs-on: ubuntu-latest
    needs: pull_image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy:
      runs-on: ubuntu-latest
      needs: test
      steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip jq

      - name: Download and Extract ngrok
        run: |
          curl -LO https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          sudo tar -xvzf ngrok-v3-stable-linux-amd64.tgz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/ngrok

      - name: Start ngrok
        run: |
          nohup ngrok http 87 > /tmp/ngrok.log 2>&1 &
          sleep 10  # Wait for ngrok to start

      - name: Print ngrok Log
        run: |
          cat /tmp/ngrok.log

      - name: Get ngrok URL
        id: get_ngrok_url
        run: |
          url=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "ngrok_url=$url" >> $GITHUB_ENV
          echo "ngrok URL: $url"  # Print the URL for debugging

      - name: Print ngrok URL
        run: |
          echo "ngrok URL: ${{ env.ngrok_url }}"

      - name: Remove Old Docker Compose
        run: |
          echo "Removing old Docker Compose "
          docker-compose -f ./docker-compose.yml down || true

      # - name: Remove ngrok
      #   run: |
      #     echo "Removing old ngrok installation"
      #     sudo rm /usr/local/bin/ngrok || true

      - name: Deploy Docker Compose
        run: |
          echo "Deploying Docker Compose"
          docker-compose -f ./docker-compose.yml up -d
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Send Email Notification
        if: success() || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: '${{ job.status }}: Deployment Status'
          body: 'The deployment step has ${{ job.status }}. ngrok URL: ${{ env.ngrok_url }}'
          to: linhbeo5427@gmail.com
          from: sys@gmail.com